options currently set: none.
base language is: Haskell2010
with the following modifiers:
GHCi-specific dynamic flag settings:
other dynamic, non-language, flag settings:
  -fno-diagnostics-show-caret
  -fexternal-dynamic-refs
  -fignore-optim-changes
  -fignore-hpc-changes
  -fno-ghci-history
  -fimplicit-import-qualified
  -fkeep-going
  -fshow-warning-groups
warning settings:
  -Wsemigroup
  -Wstar-is-type
  -Wcompat-unqualified-imports
Should fail, GADTs is not enabled
options currently set: none.
base language is: Haskell2010
with the following modifiers:
  -XGADTSyntax
  -XGADTs
  -XMonoLocalBinds
GHCi-specific dynamic flag settings:
other dynamic, non-language, flag settings:
  -fno-diagnostics-show-caret
  -fexternal-dynamic-refs
  -fignore-optim-changes
  -fignore-hpc-changes
  -fno-ghci-history
  -fimplicit-import-qualified
  -fkeep-going
  -fshow-warning-groups
warning settings:
  -Wsemigroup
  -Wstar-is-type
  -Wcompat-unqualified-imports
Should work, GADTs is in force from :set
options currently set: none.
base language is: Haskell2010
with the following modifiers:
  -XGADTSyntax
  -XMonoLocalBinds
GHCi-specific dynamic flag settings:
other dynamic, non-language, flag settings:
  -fno-diagnostics-show-caret
  -fexternal-dynamic-refs
  -fignore-optim-changes
  -fignore-hpc-changes
  -fno-ghci-history
  -fimplicit-import-qualified
  -fkeep-going
  -fshow-warning-groups
warning settings:
  -Wsemigroup
  -Wstar-is-type
  -Wcompat-unqualified-imports
Should fail, GADTs is now disabled
base language is: Haskell2010
with the following modifiers:
  -XExtendedDefaultRules
  -XGADTSyntax
  -XGADTs
  -XMonoLocalBinds
  -XNoMonomorphismRestriction
GHCi-specific dynamic flag settings:
other dynamic, non-language, flag settings:
  -fno-diagnostics-show-caret
  -fexternal-dynamic-refs
  -fignore-optim-changes
  -fignore-hpc-changes
  -fno-ghci-history
  -fimplicit-import-qualified
  -fshow-warning-groups
warning settings:
  -Wsemigroup
  -Wstar-is-type
  -Wcompat-unqualified-imports
Should fail, GADTs is only enabled at the prompt
C :: T Int
